{"version":3,"sources":["views/Login/index.js"],"names":["Login","history","useHistory","setToken","useStore","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","useEffect","access_token","cookies","set","push","className","href","target","title","rel","onClick","key","redirectUri","encodedScopes","encodeURIComponent","process","icon","faSignInAlt"],"mappings":"+NA0FeA,UA7ED,KACZ,MAAMC,EAAUC,eACV,SAAEC,GAAaC,cACfC,EAGGC,OAAOC,SAASF,KACpBG,UAAU,GACVC,MAAM,KACNC,QAAO,SAAUC,EAASC,GACzB,GAAIA,EAAM,CACR,IAAIC,EAAQD,EAAKH,MAAM,KACvBE,EAAQE,EAAM,IAAMC,mBAAmBD,EAAM,IAE/C,OAAOF,IACN,IA0BP,OARAI,qBAAU,KACJV,EAAKW,eACPC,IAAQC,IAAI,QAASb,EAAKW,cAC1Bb,GAAS,IAAME,EAAKW,eACpBf,EAAQkB,KAAK,YAEd,IAGD,sBAAKC,UAAU,kBAAf,UACE,qBAAKA,UAAU,YAEf,sBAAKA,UAAU,cAAf,UACE,cAAC,IAAD,CAAMA,UAAU,SAChB,oBAAIA,UAAU,QAAd,8DACA,0BAASA,UAAU,UAAnB,UACE,uJAIA,mGAEE,uEAFF,8BAE2E,IACzE,mBACEC,KAAK,2DACLC,OAAO,SACPC,MAAM,uBACNC,IAAI,aAJN,kBAHF,wFAeF,yBAAQJ,UAAU,WAAWK,QAlDnC,WACE,IAAIC,EAAKC,EACT,MAAMC,EAAgBC,mBAvBV,sGA6BVH,EAAMI,mCACNH,EAAcG,gEAGhBxB,OAAOC,SAAY,wEAA8BmB,kBAAoBC,WAAqBC,KAsCtF,gCAEE,cAAC,IAAD,CAAiBG,KAAMC","file":"static/js/5.6d60cd1a.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./styles.scss\";\r\n\r\nimport { useStore } from \"@/store\";\r\nimport { cookies } from \"@utils\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Logo } from \"@/components/ui\";\r\n\r\nconst scopes = `user-library-read user-follow-read user-top-read playlist-read-collaborative playlist-read-private`;\r\nconst baseAPILocation = \"https://accounts.spotify.com/authorize?response_type=token&\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const { setToken } = useStore();\r\n  const hash = getUrlHashToObject();\r\n\r\n  function getUrlHashToObject() {\r\n    return window.location.hash\r\n      .substring(1)\r\n      .split(\"&\")\r\n      .reduce(function (initial, item) {\r\n        if (item) {\r\n          let parts = item.split(\"=\");\r\n          initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        }\r\n        return initial;\r\n      }, {});\r\n  }\r\n\r\n  function goToSpotifyLogin() {\r\n    let key, redirectUri;\r\n    const encodedScopes = encodeURIComponent(scopes);\r\n\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      key = process.env.REACT_APP_API_KEY;\r\n      redirectUri = process.env.REACT_APP_REDIRECT_URI;\r\n    } else {\r\n      key = process.env.REACT_APP_API_KEY_PROD;\r\n      redirectUri = process.env.REACT_APP_REDIRECT_URI_PROD;\r\n    }\r\n\r\n    window.location = `${baseAPILocation}client_id=${key}&redirect_uri=${redirectUri}&scope=${encodedScopes}`;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (hash.access_token) {\r\n      cookies.set(\"token\", hash.access_token);\r\n      setToken(() => hash.access_token);\r\n      history.push(\"/home\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"overlay\"></div>\r\n\r\n      <div className=\"login-modal\">\r\n        <Logo className=\"logo\" />\r\n        <h1 className=\"title\">Hello! This is an UI clone of Spotify web player</h1>\r\n        <section className=\"section\">\r\n          <p>\r\n            Spotify login is required to be able to display user data from their API. After\r\n            finishing you will be redirected back.\r\n          </p>\r\n          <p>\r\n            Note: All data accessed by this app are read-only and non-private.\r\n            <b> We will not have access to your email</b>, the app code can be found{\" \"}\r\n            <a\r\n              href=\"https://github.com/lucas-santosP/clone-spotify-web-react\"\r\n              target=\"_blank\"\r\n              title=\"Go to the repository\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              here\r\n            </a>\r\n            . And you'll be able to check all the information accessed before accepting it.\r\n          </p>\r\n        </section>\r\n\r\n        <button className=\"btn-link\" onClick={goToSpotifyLogin}>\r\n          Go to Spotify login\r\n          <FontAwesomeIcon icon={faSignInAlt} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}
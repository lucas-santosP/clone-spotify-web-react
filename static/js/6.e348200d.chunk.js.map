{"version":3,"sources":["views/YourLibrary/index.js"],"names":["YourLibrary","currentLibraryTab","albums","podcasts","artists","playlists","useStore","getPlaylistDescription","playlist","description","replace","owner","display_name","className","title","map","name","subtitle","image","images","url","subtitleMultiline","id","artist","imageRounded","podcast","publisher","album","artistsArrayToString","subtitleLink"],"mappings":"wMA0EeA,UAnEK,KAClB,MAAM,kBAAEC,EAAF,OAAqBC,EAArB,SAA6BC,EAA7B,QAAuCC,EAAvC,UAAgDC,GAAcC,cAEpE,SAASC,EAAuBC,GAC9B,OAAIA,EAASC,YACJD,EAASC,YAAYC,QAAQ,kBAAmB,IAGjD,MAAKF,EAASG,MAAMC,eAG9B,OACE,sBAAKC,UAAU,yBAAf,UACE,cAAC,IAAD,CAAeC,MAAOb,IAEtB,sBAAKY,UAAU,aAAf,UACyB,cAAtBZ,GACCI,EAAUU,KAAKP,IAAD,aACZ,cAAC,IAAD,CACEK,UAAU,YAEVC,MAAON,EAASQ,KAChBC,SAAUV,EAAuBC,GACjCU,MAAK,OAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAUW,OAAO,UAAnB,aAAE,EAAqBC,IAC5BC,mBAAmB,GAJdb,EAASc,OAQG,YAAtBrB,GACCG,EAAQW,KAAKQ,IAAD,aACV,cAAC,IAAD,CACEV,UAAU,YAEVC,MAAOS,EAAOP,KACdC,SAAS,SACTC,MAAK,OAAEK,QAAF,IAAEA,GAAF,UAAEA,EAAQJ,OAAO,UAAjB,aAAE,EAAmBC,IAC1BI,cAAc,GAJTD,EAAOD,OAQK,aAAtBrB,GACCE,EAASY,KAAKU,IAAD,aACX,cAAC,IAAD,CACEZ,UAAU,YAEVC,MAAOW,EAAQT,KACfC,SAAUQ,EAAQC,UAClBR,MAAK,OAAEO,QAAF,IAAEA,GAAF,UAAEA,EAASN,OAAO,UAAlB,aAAE,EAAoBC,KAHtBK,EAAQH,OAOI,WAAtBrB,GACCC,EAAOa,KAAKY,IAAD,aACT,cAAC,IAAD,CACEd,UAAU,YAEVC,MAAOa,EAAMX,KACbC,SAAUW,YAAqBD,EAAMvB,SACrCyB,aAAa,IACbX,MAAK,OAAES,QAAF,IAAEA,GAAF,UAAEA,EAAOR,OAAO,UAAhB,aAAE,EAAkBC,KAJpBO,EAAML","file":"static/js/6.e348200d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nimport { useStore } from \"@/store\";\r\nimport { artistsArrayToString } from \"@utils\";\r\nimport { Card, SectionHeader } from \"@/components/ui\";\r\n\r\nconst YourLibrary = () => {\r\n  const { currentLibraryTab, albums, podcasts, artists, playlists } = useStore();\r\n\r\n  function getPlaylistDescription(playlist) {\r\n    if (playlist.description) {\r\n      return playlist.description.replace(/<\\/?[^>]+(>|$)/g, \"\");\r\n    }\r\n\r\n    return `By ${playlist.owner.display_name}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"your-library-container\">\r\n      <SectionHeader title={currentLibraryTab} />\r\n\r\n      <div className=\"grid-cards\">\r\n        {currentLibraryTab === \"Playlists\" &&\r\n          playlists.map((playlist) => (\r\n            <Card\r\n              className=\"grid-item\"\r\n              key={playlist.id}\r\n              title={playlist.name}\r\n              subtitle={getPlaylistDescription(playlist)}\r\n              image={playlist?.images[0]?.url}\r\n              subtitleMultiline={true}\r\n            />\r\n          ))}\r\n\r\n        {currentLibraryTab === \"Artists\" &&\r\n          artists.map((artist) => (\r\n            <Card\r\n              className=\"grid-item\"\r\n              key={artist.id}\r\n              title={artist.name}\r\n              subtitle=\"Artist\"\r\n              image={artist?.images[1]?.url}\r\n              imageRounded={true}\r\n            />\r\n          ))}\r\n\r\n        {currentLibraryTab === \"Podcasts\" &&\r\n          podcasts.map((podcast) => (\r\n            <Card\r\n              className=\"grid-item\"\r\n              key={podcast.id}\r\n              title={podcast.name}\r\n              subtitle={podcast.publisher}\r\n              image={podcast?.images[1]?.url}\r\n            />\r\n          ))}\r\n\r\n        {currentLibraryTab === \"Albums\" &&\r\n          albums.map((album) => (\r\n            <Card\r\n              className=\"grid-item\"\r\n              key={album.id}\r\n              title={album.name}\r\n              subtitle={artistsArrayToString(album.artists)}\r\n              subtitleLink=\"#\"\r\n              image={album?.images[1]?.url}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YourLibrary;\r\n"],"sourceRoot":""}